{"ast":null,"code":"import { addDays } from \"./addDays.mjs\";\nimport { addMonths } from \"./addMonths.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n/**\r\n * @name add\r\n * @category Common Helpers\r\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\r\n *\r\n * @description\r\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\r\n *\r\n * | Key            | Description                        |\r\n * |----------------|------------------------------------|\r\n * | years          | Amount of years to be added        |\r\n * | months         | Amount of months to be added       |\r\n * | weeks          | Amount of weeks to be added        |\r\n * | days           | Amount of days to be added         |\r\n * | hours          | Amount of hours to be added        |\r\n * | minutes        | Amount of minutes to be added      |\r\n * | seconds        | Amount of seconds to be added      |\r\n *\r\n * All values default to 0\r\n *\r\n * @returns The new date with the seconds added\r\n *\r\n * @example\r\n * // Add the following duration to 1 September 2014, 10:19:50\r\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\r\n *   years: 2,\r\n *   months: 9,\r\n *   weeks: 1,\r\n *   days: 7,\r\n *   hours: 5,\\\\-7\r\n *   minutes: 9,\r\n *   seconds: 30,\r\n * })\r\n * //=> Thu Jun 15 2017 15:29:20\r\n */\n\nexport function add(date, duration) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0\n  } = duration; // Add years and months\n\n  const _date = toDate(date);\n\n  const dateWithMonths = months || years ? addMonths(_date, months + years * 12) : _date; // Add weeks and days\n\n  const dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds\n\n  const minutesToAdd = minutes + hours * 60;\n  const secondsToAdd = seconds + minutesToAdd * 60;\n  const msToAdd = secondsToAdd * 1000;\n  const finalDate = constructFrom(date, dateWithDays.getTime() + msToAdd);\n  return finalDate;\n} // Fallback for modularized imports:\n\nexport default add;","map":{"version":3,"names":["addDays","addMonths","constructFrom","toDate","add","date","duration","years","months","weeks","days","hours","minutes","seconds","_date","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","getTime"],"sources":["C:/Users/Lions/final-project-callbright-1/client/node_modules/date-fns/add.mjs"],"sourcesContent":["import { addDays } from \"./addDays.mjs\";\r\nimport { addMonths } from \"./addMonths.mjs\";\r\nimport { constructFrom } from \"./constructFrom.mjs\";\r\nimport { toDate } from \"./toDate.mjs\";\r\n\r\n/**\r\n * @name add\r\n * @category Common Helpers\r\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\r\n *\r\n * @description\r\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\r\n *\r\n * | Key            | Description                        |\r\n * |----------------|------------------------------------|\r\n * | years          | Amount of years to be added        |\r\n * | months         | Amount of months to be added       |\r\n * | weeks          | Amount of weeks to be added        |\r\n * | days           | Amount of days to be added         |\r\n * | hours          | Amount of hours to be added        |\r\n * | minutes        | Amount of minutes to be added      |\r\n * | seconds        | Amount of seconds to be added      |\r\n *\r\n * All values default to 0\r\n *\r\n * @returns The new date with the seconds added\r\n *\r\n * @example\r\n * // Add the following duration to 1 September 2014, 10:19:50\r\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\r\n *   years: 2,\r\n *   months: 9,\r\n *   weeks: 1,\r\n *   days: 7,\r\n *   hours: 5,\\\\-7\r\n *   minutes: 9,\r\n *   seconds: 30,\r\n * })\r\n * //=> Thu Jun 15 2017 15:29:20\r\n */\r\nexport function add(date, duration) {\r\n  const {\r\n    years = 0,\r\n    months = 0,\r\n    weeks = 0,\r\n    days = 0,\r\n    hours = 0,\r\n    minutes = 0,\r\n    seconds = 0,\r\n  } = duration;\r\n\r\n  // Add years and months\r\n  const _date = toDate(date);\r\n  const dateWithMonths =\r\n    months || years ? addMonths(_date, months + years * 12) : _date;\r\n\r\n  // Add weeks and days\r\n  const dateWithDays =\r\n    days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\r\n\r\n  // Add days, hours, minutes and seconds\r\n  const minutesToAdd = minutes + hours * 60;\r\n  const secondsToAdd = seconds + minutesToAdd * 60;\r\n  const msToAdd = secondsToAdd * 1000;\r\n  const finalDate = constructFrom(date, dateWithDays.getTime() + msToAdd);\r\n\r\n  return finalDate;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default add;\r\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,GAAT,CAAaC,IAAb,EAAmBC,QAAnB,EAA6B;EAClC,MAAM;IACJC,KAAK,GAAG,CADJ;IAEJC,MAAM,GAAG,CAFL;IAGJC,KAAK,GAAG,CAHJ;IAIJC,IAAI,GAAG,CAJH;IAKJC,KAAK,GAAG,CALJ;IAMJC,OAAO,GAAG,CANN;IAOJC,OAAO,GAAG;EAPN,IAQFP,QARJ,CADkC,CAWlC;;EACA,MAAMQ,KAAK,GAAGX,MAAM,CAACE,IAAD,CAApB;;EACA,MAAMU,cAAc,GAClBP,MAAM,IAAID,KAAV,GAAkBN,SAAS,CAACa,KAAD,EAAQN,MAAM,GAAGD,KAAK,GAAG,EAAzB,CAA3B,GAA0DO,KAD5D,CAbkC,CAgBlC;;EACA,MAAME,YAAY,GAChBN,IAAI,IAAID,KAAR,GAAgBT,OAAO,CAACe,cAAD,EAAiBL,IAAI,GAAGD,KAAK,GAAG,CAAhC,CAAvB,GAA4DM,cAD9D,CAjBkC,CAoBlC;;EACA,MAAME,YAAY,GAAGL,OAAO,GAAGD,KAAK,GAAG,EAAvC;EACA,MAAMO,YAAY,GAAGL,OAAO,GAAGI,YAAY,GAAG,EAA9C;EACA,MAAME,OAAO,GAAGD,YAAY,GAAG,IAA/B;EACA,MAAME,SAAS,GAAGlB,aAAa,CAACG,IAAD,EAAOW,YAAY,CAACK,OAAb,KAAyBF,OAAhC,CAA/B;EAEA,OAAOC,SAAP;AACD,C,CAED;;AACA,eAAehB,GAAf"},"metadata":{},"sourceType":"module"}