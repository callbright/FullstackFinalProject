{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\n/**\r\n * @name isTuesday\r\n * @category Weekday Helpers\r\n * @summary Is the given date Tuesday?\r\n *\r\n * @description\r\n * Is the given date Tuesday?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n *\r\n * @returns The date is Tuesday\r\n *\r\n * @example\r\n * // Is 23 September 2014 Tuesday?\r\n * const result = isTuesday(new Date(2014, 8, 23))\r\n * //=> true\r\n */\n\nexport function isTuesday(date) {\n  return toDate(date).getDay() === 2;\n} // Fallback for modularized imports:\n\nexport default isTuesday;","map":{"version":3,"names":["toDate","isTuesday","date","getDay"],"sources":["C:/Users/Lions/FullstackFinalProject/client/node_modules/date-fns/isTuesday.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\r\n\r\n/**\r\n * @name isTuesday\r\n * @category Weekday Helpers\r\n * @summary Is the given date Tuesday?\r\n *\r\n * @description\r\n * Is the given date Tuesday?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n *\r\n * @returns The date is Tuesday\r\n *\r\n * @example\r\n * // Is 23 September 2014 Tuesday?\r\n * const result = isTuesday(new Date(2014, 8, 23))\r\n * //=> true\r\n */\r\nexport function isTuesday(date) {\r\n  return toDate(date).getDay() === 2;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default isTuesday;\r\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EAC9B,OAAOF,MAAM,CAACE,IAAD,CAAN,CAAaC,MAAb,OAA0B,CAAjC;AACD,C,CAED;;AACA,eAAeF,SAAf"},"metadata":{},"sourceType":"module"}