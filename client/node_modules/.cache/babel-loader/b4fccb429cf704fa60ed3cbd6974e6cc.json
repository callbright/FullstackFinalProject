{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\n/**\r\n * @name endOfYear\r\n * @category Year Helpers\r\n * @summary Return the end of a year for the given date.\r\n *\r\n * @description\r\n * Return the end of a year for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The original date\r\n *\r\n * @returns The end of a year\r\n *\r\n * @example\r\n * // The end of a year for 2 September 2014 11:55:00:\r\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\r\n * //=> Wed Dec 31 2014 23:59:59.999\r\n */\n\nexport function endOfYear(date) {\n  var _date = toDate(date);\n\n  var year = _date.getFullYear();\n\n  _date.setFullYear(year + 1, 0, 0);\n\n  _date.setHours(23, 59, 59, 999);\n\n  return _date;\n} // Fallback for modularized imports:\n\nexport default endOfYear;","map":{"version":3,"names":["toDate","endOfYear","date","_date","year","getFullYear","setFullYear","setHours"],"sources":["C:/Users/Lions/FullstackFinalProject/client/node_modules/date-fns/endOfYear.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\r\n\r\n/**\r\n * @name endOfYear\r\n * @category Year Helpers\r\n * @summary Return the end of a year for the given date.\r\n *\r\n * @description\r\n * Return the end of a year for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The original date\r\n *\r\n * @returns The end of a year\r\n *\r\n * @example\r\n * // The end of a year for 2 September 2014 11:55:00:\r\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\r\n * //=> Wed Dec 31 2014 23:59:59.999\r\n */\r\nexport function endOfYear(date) {\r\n  const _date = toDate(date);\r\n  const year = _date.getFullYear();\r\n  _date.setFullYear(year + 1, 0, 0);\r\n  _date.setHours(23, 59, 59, 999);\r\n  return _date;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default endOfYear;\r\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EAC9B,IAAMC,KAAK,GAAGH,MAAM,CAACE,IAAD,CAApB;;EACA,IAAME,IAAI,GAAGD,KAAK,CAACE,WAAN,EAAb;;EACAF,KAAK,CAACG,WAAN,CAAkBF,IAAI,GAAG,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;;EACAD,KAAK,CAACI,QAAN,CAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,GAA3B;;EACA,OAAOJ,KAAP;AACD,C,CAED;;AACA,eAAeF,SAAf"},"metadata":{},"sourceType":"module"}