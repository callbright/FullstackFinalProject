{"ast":null,"code":"import { daysInYear } from \"./constants.mjs\";\n/**\r\n * @name milliseconds\r\n * @category Millisecond Helpers\r\n * @summary\r\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\r\n *\r\n * @description\r\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\r\n *\r\n * One years equals 365.2425 days according to the formula:\r\n *\r\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\r\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\r\n *\r\n * One month is a year divided by 12.\r\n *\r\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\r\n *\r\n * @returns The milliseconds\r\n *\r\n * @example\r\n * // 1 year in milliseconds\r\n * milliseconds({ years: 1 })\r\n * //=> 31556952000\r\n *\r\n * // 3 months in milliseconds\r\n * milliseconds({ months: 3 })\r\n * //=> 7889238000\r\n */\n\nexport function milliseconds(_ref) {\n  var years = _ref.years,\n      months = _ref.months,\n      weeks = _ref.weeks,\n      days = _ref.days,\n      hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds;\n  var totalDays = 0;\n  if (years) totalDays += years * daysInYear;\n  if (months) totalDays += months * (daysInYear / 12);\n  if (weeks) totalDays += weeks * 7;\n  if (days) totalDays += days;\n  var totalSeconds = totalDays * 24 * 60 * 60;\n  if (hours) totalSeconds += hours * 60 * 60;\n  if (minutes) totalSeconds += minutes * 60;\n  if (seconds) totalSeconds += seconds;\n  return Math.trunc(totalSeconds * 1000);\n} // Fallback for modularized imports:\n\nexport default milliseconds;","map":{"version":3,"names":["daysInYear","milliseconds","years","months","weeks","days","hours","minutes","seconds","totalDays","totalSeconds","Math","trunc"],"sources":["C:/Users/Lions/FullstackFinalProject/client/node_modules/date-fns/milliseconds.mjs"],"sourcesContent":["import { daysInYear } from \"./constants.mjs\";\r\n\r\n/**\r\n * @name milliseconds\r\n * @category Millisecond Helpers\r\n * @summary\r\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\r\n *\r\n * @description\r\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\r\n *\r\n * One years equals 365.2425 days according to the formula:\r\n *\r\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\r\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\r\n *\r\n * One month is a year divided by 12.\r\n *\r\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\r\n *\r\n * @returns The milliseconds\r\n *\r\n * @example\r\n * // 1 year in milliseconds\r\n * milliseconds({ years: 1 })\r\n * //=> 31556952000\r\n *\r\n * // 3 months in milliseconds\r\n * milliseconds({ months: 3 })\r\n * //=> 7889238000\r\n */\r\nexport function milliseconds({\r\n  years,\r\n  months,\r\n  weeks,\r\n  days,\r\n  hours,\r\n  minutes,\r\n  seconds,\r\n}) {\r\n  let totalDays = 0;\r\n\r\n  if (years) totalDays += years * daysInYear;\r\n  if (months) totalDays += months * (daysInYear / 12);\r\n  if (weeks) totalDays += weeks * 7;\r\n  if (days) totalDays += days;\r\n\r\n  let totalSeconds = totalDays * 24 * 60 * 60;\r\n\r\n  if (hours) totalSeconds += hours * 60 * 60;\r\n  if (minutes) totalSeconds += minutes * 60;\r\n  if (seconds) totalSeconds += seconds;\r\n\r\n  return Math.trunc(totalSeconds * 1000);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default milliseconds;\r\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,iBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,OAQJ;EAAA,IAPDC,KAOC,QAPDA,KAOC;EAAA,IANDC,MAMC,QANDA,MAMC;EAAA,IALDC,KAKC,QALDA,KAKC;EAAA,IAJDC,IAIC,QAJDA,IAIC;EAAA,IAHDC,KAGC,QAHDA,KAGC;EAAA,IAFDC,OAEC,QAFDA,OAEC;EAAA,IADDC,OACC,QADDA,OACC;EACD,IAAIC,SAAS,GAAG,CAAhB;EAEA,IAAIP,KAAJ,EAAWO,SAAS,IAAIP,KAAK,GAAGF,UAArB;EACX,IAAIG,MAAJ,EAAYM,SAAS,IAAIN,MAAM,IAAIH,UAAU,GAAG,EAAjB,CAAnB;EACZ,IAAII,KAAJ,EAAWK,SAAS,IAAIL,KAAK,GAAG,CAArB;EACX,IAAIC,IAAJ,EAAUI,SAAS,IAAIJ,IAAb;EAEV,IAAIK,YAAY,GAAGD,SAAS,GAAG,EAAZ,GAAiB,EAAjB,GAAsB,EAAzC;EAEA,IAAIH,KAAJ,EAAWI,YAAY,IAAIJ,KAAK,GAAG,EAAR,GAAa,EAA7B;EACX,IAAIC,OAAJ,EAAaG,YAAY,IAAIH,OAAO,GAAG,EAA1B;EACb,IAAIC,OAAJ,EAAaE,YAAY,IAAIF,OAAhB;EAEb,OAAOG,IAAI,CAACC,KAAL,CAAWF,YAAY,GAAG,IAA1B,CAAP;AACD,C,CAED;;AACA,eAAeT,YAAf"},"metadata":{},"sourceType":"module"}