{"ast":null,"code":"var _jsxFileName = \"/Users/ChristianAllbright/final-project-callbright/client/src/components/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = () => {\n  _s();\n\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPost();\n    fetchComments();\n  }, [id]);\n\n  const fetchPost = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('criteria').select('*').eq('id', id).single();\n\n    if (error) {\n      console.error('Error fetching post:', error);\n    } else {\n      setPost(data);\n    }\n  };\n\n  const fetchComments = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('comments').select('*').eq('post_id', parseInt(id)); // Ensure 'id' is treated as a number\n\n    if (error) {\n      console.error('Error fetching comments:', error);\n    } else {\n      setComments(data);\n    }\n  };\n\n  const handleCommentChange = event => {\n    setComment(event.target.value);\n  };\n\n  const postComment = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('comments').insert([{\n      post_id: id,\n      author: 'Author Name',\n      content: comment,\n      created_at: new Date()\n    }]);\n\n    if (error) {\n      alert('Failed to post comment. Please try again!');\n      console.error('Error posting comment:', error);\n    } else {\n      setComments([...comments, data[0]]);\n      setComment(''); // Clear input after posting\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Delete Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a comment...\",\n            value: comment,\n            onChange: handleCommentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: postComment,\n            children: \"Post Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading post details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostDetail, \"Jrtw1lyGpjxElWL+qlBd/Zz/kbA=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","supabase","PostDetail","post","setPost","comments","setComments","comment","setComment","id","navigate","fetchPost","fetchComments","data","error","from","select","eq","single","console","parseInt","handleCommentChange","event","target","value","postComment","insert","post_id","author","content","created_at","Date","alert","title","map"],"sources":["/Users/ChristianAllbright/final-project-callbright/client/src/components/PostDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../client';\n\nconst PostDetail = () => {\n    const [post, setPost] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n    const { id } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        fetchPost();\n        fetchComments();\n    }, [id]);\n\n    const fetchPost = async () => {\n        const { data, error } = await supabase\n            .from('criteria')\n            .select('*')\n            .eq('id', id)\n            .single();\n\n        if (error) {\n            console.error('Error fetching post:', error);\n        } else {\n            setPost(data);\n        }\n    };\n\n    const fetchComments = async () => {\n        const { data, error } = await supabase\n            .from('comments')\n            .select('*')\n            .eq('post_id', parseInt(id)); // Ensure 'id' is treated as a number\n    \n        if (error) {\n            console.error('Error fetching comments:', error);\n        } else {\n            setComments(data);\n        }\n    };\n    \n\n    const handleCommentChange = (event) => {\n        setComment(event.target.value);\n    };\n\n    const postComment = async () => {\n        const { data, error } = await supabase\n            .from('comments')\n            .insert([\n                { post_id: id, author: 'Author Name', content: comment, created_at: new Date() }\n            ]);\n\n        if (error) {\n            alert('Failed to post comment. Please try again!');\n            console.error('Error posting comment:', error);\n        } else {\n            setComments([...comments, data[0]]);\n            setComment('');  // Clear input after posting\n        }\n    };\n\n    return (\n        <div>\n            {post ? (\n                <div>\n                    <h1>{post.title}</h1>\n                    <p>{post.content}</p>\n                    <button onClick={() => navigate('/')}>Delete Post</button>\n                    <div>\n                        <h2>Comments</h2>\n                        {comments.map(comment => (\n                            <div key={comment.id}>\n                                <strong>{comment.author}</strong>\n                                <p>{comment.content}</p>\n                            </div>\n                        ))}\n                        <div>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Add a comment...\"\n                                value={comment}\n                                onChange={handleCommentChange}\n                            />\n                            <button onClick={postComment}>Post Comment</button>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <p>Loading post details...</p>\n            )}\n        </div>\n    );\n};\n\nexport default PostDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}