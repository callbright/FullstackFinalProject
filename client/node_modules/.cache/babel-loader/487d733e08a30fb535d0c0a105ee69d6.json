{"ast":null,"code":"import { toDate } from \"./toDate.mjs\";\n/**\r\n * @name isMonday\r\n * @category Weekday Helpers\r\n * @summary Is the given date Monday?\r\n *\r\n * @description\r\n * Is the given date Monday?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n *\r\n * @returns The date is Monday\r\n *\r\n * @example\r\n * // Is 22 September 2014 Monday?\r\n * const result = isMonday(new Date(2014, 8, 22))\r\n * //=> true\r\n */\n\nexport function isMonday(date) {\n  return toDate(date).getDay() === 1;\n} // Fallback for modularized imports:\n\nexport default isMonday;","map":{"version":3,"names":["toDate","isMonday","date","getDay"],"sources":["C:/Users/Lions/FullstackFinalProject/client/node_modules/date-fns/isMonday.mjs"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\r\n\r\n/**\r\n * @name isMonday\r\n * @category Weekday Helpers\r\n * @summary Is the given date Monday?\r\n *\r\n * @description\r\n * Is the given date Monday?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to check\r\n *\r\n * @returns The date is Monday\r\n *\r\n * @example\r\n * // Is 22 September 2014 Monday?\r\n * const result = isMonday(new Date(2014, 8, 22))\r\n * //=> true\r\n */\r\nexport function isMonday(date) {\r\n  return toDate(date).getDay() === 1;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default isMonday;\r\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EAC7B,OAAOF,MAAM,CAACE,IAAD,CAAN,CAAaC,MAAb,OAA0B,CAAjC;AACD,C,CAED;;AACA,eAAeF,QAAf"},"metadata":{},"sourceType":"module"}