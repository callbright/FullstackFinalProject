{"ast":null,"code":"import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n/**\r\n * @name setISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Set the ISO week to the given date.\r\n *\r\n * @description\r\n * Set the ISO week to the given date, saving the weekday number.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param week - The ISO week of the new date\r\n *\r\n * @returns The new date with the ISO week set\r\n *\r\n * @example\r\n * // Set the 53rd ISO week to 7 August 2004:\r\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\r\n * //=> Sat Jan 01 2005 00:00:00\r\n */\n\nexport function setISOWeek(date, week) {\n  var _date = toDate(date);\n\n  var diff = getISOWeek(_date) - week;\n\n  _date.setDate(_date.getDate() - diff * 7);\n\n  return _date;\n} // Fallback for modularized imports:\n\nexport default setISOWeek;","map":{"version":3,"names":["getISOWeek","toDate","setISOWeek","date","week","_date","diff","setDate","getDate"],"sources":["C:/Users/Lions/FullstackFinalProject/client/node_modules/date-fns/setISOWeek.mjs"],"sourcesContent":["import { getISOWeek } from \"./getISOWeek.mjs\";\r\nimport { toDate } from \"./toDate.mjs\";\r\n\r\n/**\r\n * @name setISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Set the ISO week to the given date.\r\n *\r\n * @description\r\n * Set the ISO week to the given date, saving the weekday number.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param week - The ISO week of the new date\r\n *\r\n * @returns The new date with the ISO week set\r\n *\r\n * @example\r\n * // Set the 53rd ISO week to 7 August 2004:\r\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\r\n * //=> Sat Jan 01 2005 00:00:00\r\n */\r\nexport function setISOWeek(date, week) {\r\n  const _date = toDate(date);\r\n  const diff = getISOWeek(_date) - week;\r\n  _date.setDate(_date.getDate() - diff * 7);\r\n  return _date;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default setISOWeek;\r\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;EACrC,IAAMC,KAAK,GAAGJ,MAAM,CAACE,IAAD,CAApB;;EACA,IAAMG,IAAI,GAAGN,UAAU,CAACK,KAAD,CAAV,GAAoBD,IAAjC;;EACAC,KAAK,CAACE,OAAN,CAAcF,KAAK,CAACG,OAAN,KAAkBF,IAAI,GAAG,CAAvC;;EACA,OAAOD,KAAP;AACD,C,CAED;;AACA,eAAeH,UAAf"},"metadata":{},"sourceType":"module"}