{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lions\\\\final-project-callbright-1\\\\client\\\\src\\\\pages\\\\ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../client';\nimport Card from '../components/Card';\nimport { Link } from 'react-router-dom';\nimport './ReadPosts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState(''); // State to hold the search query\n\n  const [sortType, setSortType] = useState('newest');\n  useEffect(() => {\n    fetchPosts();\n  }, [sortType, search]); // Also depend on search state\n\n  const fetchPosts = async () => {\n    let query = supabase.from('criteria').select(); // Adding search functionality: filter posts by title\n\n    if (search) {\n      query = query.ilike('title', `%${search}%`);\n    }\n\n    if (sortType === 'newest') {\n      query = query.order('created_at', {\n        ascending: false\n      });\n    } else if (sortType === 'upvotes') {\n      query = query.order('upvotes', {\n        ascending: false\n      });\n    }\n\n    const {\n      data,\n      error\n    } = await query;\n\n    if (error) {\n      console.error('Error fetching posts:', error);\n    } else {\n      setPosts(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search posts by title...\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSortType(e.target.value),\n      value: sortType,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"newest\",\n        children: \"Newest First\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"upvotes\",\n        children: \"Most Upvotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ReadPosts\",\n      children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n        id: post.id,\n        title: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/post/${post.id}`,\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 65\n        }, this),\n        subtopic: post.subtopic,\n        content: post.content\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No New Posts \\uD83D\\uDE1E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"PbF6JsrmIH4Ru2eRfJ46l1FZL1w=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Card","Link","ReadPosts","posts","setPosts","search","setSearch","sortType","setSortType","fetchPosts","query","from","select","ilike","order","ascending","data","error","console","e","target","value","length","map","post","id","title","subtopic","content"],"sources":["C:/Users/Lions/final-project-callbright-1/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../client';\r\nimport Card from '../components/Card';\r\nimport { Link } from 'react-router-dom';\r\nimport './ReadPosts.css';\r\n\r\nconst ReadPosts = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [search, setSearch] = useState('');  // State to hold the search query\r\n    const [sortType, setSortType] = useState('newest');\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, [sortType, search]);  // Also depend on search state\r\n\r\n    const fetchPosts = async () => {\r\n        let query = supabase.from('criteria').select();\r\n\r\n        // Adding search functionality: filter posts by title\r\n        if (search) {\r\n            query = query.ilike('title', `%${search}%`);\r\n        }\r\n\r\n        if (sortType === 'newest') {\r\n            query = query.order('created_at', { ascending: false });\r\n        } else if (sortType === 'upvotes') {\r\n            query = query.order('upvotes', { ascending: false });\r\n        }\r\n\r\n        const { data, error } = await query;\r\n        if (error) {\r\n            console.error('Error fetching posts:', error);\r\n        } else {\r\n            setPosts(data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search posts by title...\"\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n            <select onChange={(e) => setSortType(e.target.value)} value={sortType}>\r\n                <option value=\"newest\">Newest First</option>\r\n                <option value=\"upvotes\">Most Upvotes</option>\r\n            </select>\r\n            <div className=\"ReadPosts\">\r\n                {posts.length > 0 ? (\r\n                    posts.map((post) => (\r\n                        <Card key={post.id} id={post.id} title={<Link to={`/post/${post.id}`}>{post.title}</Link>} subtopic={post.subtopic} content={post.content} />\r\n                    ))\r\n                ) : (\r\n                    <h2>No New Posts ðŸ˜ž</h2>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReadPosts;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CAFoB,CAEuB;;EAC3C,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,QAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACZW,UAAU;EACb,CAFQ,EAEN,CAACF,QAAD,EAAWF,MAAX,CAFM,CAAT,CALoB,CAOK;;EAEzB,MAAMI,UAAU,GAAG,YAAY;IAC3B,IAAIC,KAAK,GAAGX,QAAQ,CAACY,IAAT,CAAc,UAAd,EAA0BC,MAA1B,EAAZ,CAD2B,CAG3B;;IACA,IAAIP,MAAJ,EAAY;MACRK,KAAK,GAAGA,KAAK,CAACG,KAAN,CAAY,OAAZ,EAAsB,IAAGR,MAAO,GAAhC,CAAR;IACH;;IAED,IAAIE,QAAQ,KAAK,QAAjB,EAA2B;MACvBG,KAAK,GAAGA,KAAK,CAACI,KAAN,CAAY,YAAZ,EAA0B;QAAEC,SAAS,EAAE;MAAb,CAA1B,CAAR;IACH,CAFD,MAEO,IAAIR,QAAQ,KAAK,SAAjB,EAA4B;MAC/BG,KAAK,GAAGA,KAAK,CAACI,KAAN,CAAY,SAAZ,EAAuB;QAAEC,SAAS,EAAE;MAAb,CAAvB,CAAR;IACH;;IAED,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkB,MAAMP,KAA9B;;IACA,IAAIO,KAAJ,EAAW;MACPC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;IACH,CAFD,MAEO;MACHb,QAAQ,CAACY,IAAD,CAAR;IACH;EACJ,CApBD;;EAsBA,oBACI;IAAA,wBACI;MACI,IAAI,EAAC,MADT;MAEI,WAAW,EAAC,0BAFhB;MAGI,KAAK,EAAEX,MAHX;MAII,QAAQ,EAAGc,CAAD,IAAOb,SAAS,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;IAJ9B;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI;MAAQ,QAAQ,EAAGF,CAAD,IAAOX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;MAAsD,KAAK,EAAEd,QAA7D;MAAA,wBACI;QAAQ,KAAK,EAAC,QAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,KAAK,EAAC,SAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,eAWI;MAAK,SAAS,EAAC,WAAf;MAAA,UACKJ,KAAK,CAACmB,MAAN,GAAe,CAAf,GACGnB,KAAK,CAACoB,GAAN,CAAWC,IAAD,iBACN,QAAC,IAAD;QAAoB,EAAE,EAAEA,IAAI,CAACC,EAA7B;QAAiC,KAAK,eAAE,QAAC,IAAD;UAAM,EAAE,EAAG,SAAQD,IAAI,CAACC,EAAG,EAA3B;UAAA,UAA+BD,IAAI,CAACE;QAApC;UAAA;UAAA;UAAA;QAAA,QAAxC;QAA2F,QAAQ,EAAEF,IAAI,CAACG,QAA1G;QAAoH,OAAO,EAAEH,IAAI,CAACI;MAAlI,GAAWJ,IAAI,CAACC,EAAhB;QAAA;QAAA;QAAA;MAAA,QADJ,CADH,gBAKG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IANR;MAAA;MAAA;MAAA;IAAA,QAXJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH,CAtDD;;GAAMvB,S;;KAAAA,S;AAwDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}