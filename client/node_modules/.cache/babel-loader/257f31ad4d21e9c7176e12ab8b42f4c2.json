{"ast":null,"code":"import { isLeapYear } from \"./isLeapYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n/**\r\n * @name getDaysInYear\r\n * @category Year Helpers\r\n * @summary Get the number of days in a year of the given date.\r\n *\r\n * @description\r\n * Get the number of days in a year of the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The given date\r\n *\r\n * @returns The number of days in a year\r\n *\r\n * @example\r\n * // How many days are in 2012?\r\n * const result = getDaysInYear(new Date(2012, 0, 1))\r\n * //=> 366\r\n */\n\nexport function getDaysInYear(date) {\n  var _date = toDate(date);\n\n  if (String(new Date(_date)) === \"Invalid Date\") {\n    return NaN;\n  }\n\n  return isLeapYear(_date) ? 366 : 365;\n} // Fallback for modularized imports:\n\nexport default getDaysInYear;","map":{"version":3,"names":["isLeapYear","toDate","getDaysInYear","date","_date","String","Date","NaN"],"sources":["C:/Users/Lions/FullstackFinalProject/client/node_modules/date-fns/getDaysInYear.mjs"],"sourcesContent":["import { isLeapYear } from \"./isLeapYear.mjs\";\r\nimport { toDate } from \"./toDate.mjs\";\r\n\r\n/**\r\n * @name getDaysInYear\r\n * @category Year Helpers\r\n * @summary Get the number of days in a year of the given date.\r\n *\r\n * @description\r\n * Get the number of days in a year of the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The given date\r\n *\r\n * @returns The number of days in a year\r\n *\r\n * @example\r\n * // How many days are in 2012?\r\n * const result = getDaysInYear(new Date(2012, 0, 1))\r\n * //=> 366\r\n */\r\nexport function getDaysInYear(date) {\r\n  const _date = toDate(date);\r\n\r\n  if (String(new Date(_date)) === \"Invalid Date\") {\r\n    return NaN;\r\n  }\r\n\r\n  return isLeapYear(_date) ? 366 : 365;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default getDaysInYear;\r\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;EAClC,IAAMC,KAAK,GAAGH,MAAM,CAACE,IAAD,CAApB;;EAEA,IAAIE,MAAM,CAAC,IAAIC,IAAJ,CAASF,KAAT,CAAD,CAAN,KAA4B,cAAhC,EAAgD;IAC9C,OAAOG,GAAP;EACD;;EAED,OAAOP,UAAU,CAACI,KAAD,CAAV,GAAoB,GAApB,GAA0B,GAAjC;AACD,C,CAED;;AACA,eAAeF,aAAf"},"metadata":{},"sourceType":"module"}