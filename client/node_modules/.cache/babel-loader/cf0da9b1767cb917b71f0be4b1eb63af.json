{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lions\\\\final-project-callbright-1\\\\client\\\\src\\\\components\\\\PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = () => {\n  _s();\n\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPost();\n    fetchComments();\n  }, [id]);\n\n  const fetchPost = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('criteria').select('*').eq('id', id).single();\n\n    if (!error) {\n      setPost(data);\n    }\n  };\n\n  const fetchComments = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('comments').select('*').eq('post_id', parseInt(id));\n\n    if (!error) {\n      setComments(data);\n    }\n  };\n\n  const handleCommentChange = event => {\n    setComment(event.target.value);\n  };\n\n  const postComment = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('comments').insert([{\n      post_id: parseInt(id),\n      content: comment,\n      created_at: new Date().toISOString()\n    }]);\n\n    if (!error && data && data.length > 0) {\n      setComments([...comments, data[0]]);\n      setComment('');\n      alert('Comment added successfully!');\n    } else if (error) {\n      alert('Failed to post comment. Please try again!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add a comment...\",\n            value: comment,\n            onChange: handleCommentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: postComment,\n            children: \"Post Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading post details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostDetail, \"Jrtw1lyGpjxElWL+qlBd/Zz/kbA=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","supabase","PostDetail","post","setPost","comments","setComments","comment","setComment","id","navigate","fetchPost","fetchComments","data","error","from","select","eq","single","parseInt","handleCommentChange","event","target","value","postComment","insert","post_id","content","created_at","Date","toISOString","length","alert","title","map","index"],"sources":["C:/Users/Lions/final-project-callbright-1/client/src/components/PostDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\n\r\nconst PostDetail = () => {\r\n    const [post, setPost] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState('');\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchPost();\r\n        fetchComments();\r\n    }, [id]);\r\n\r\n    const fetchPost = async () => {\r\n        const { data, error } = await supabase\r\n            .from('criteria')\r\n            .select('*')\r\n            .eq('id', id)\r\n            .single();\r\n\r\n        if (!error) {\r\n            setPost(data);\r\n        }\r\n    };\r\n\r\n    const fetchComments = async () => {\r\n        const { data, error } = await supabase\r\n            .from('comments')\r\n            .select('*')\r\n            .eq('post_id', parseInt(id));\r\n\r\n        if (!error) {\r\n            setComments(data);\r\n        }\r\n    };\r\n\r\n    const handleCommentChange = (event) => {\r\n        setComment(event.target.value);\r\n    };\r\n\r\n    const postComment = async () => {\r\n        const { data, error } = await supabase\r\n            .from('comments')\r\n            .insert([\r\n                {\r\n                    post_id: parseInt(id),\r\n                    content: comment,\r\n                    created_at: new Date().toISOString()\r\n                }\r\n            ]);\r\n\r\n        if (!error && data && data.length > 0) {\r\n            setComments([...comments, data[0]]);\r\n            setComment('');\r\n            alert('Comment added successfully!');\r\n        } else if (error) {\r\n            alert('Failed to post comment. Please try again!');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {post ? (\r\n                <div>\r\n                    <h1>{post.title}</h1>\r\n                    <p>{post.content}</p>\r\n                    <div>\r\n                        <h2>Comments</h2>\r\n                        {comments.map((comment, index) => (\r\n                            <div key={index}>\r\n                                <p>{comment.content}</p>\r\n                            </div>\r\n                        ))}\r\n                        <div>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Add a comment...\"\r\n                                value={comment}\r\n                                onChange={handleCommentChange}\r\n                            />\r\n                            <button onClick={postComment}>Post Comment</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <p>Loading post details...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}