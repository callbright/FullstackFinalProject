{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Lions/FullstackFinalProject/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Lions/FullstackFinalProject/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Lions/FullstackFinalProject/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{supabase}from'../client';import Card from'../components/Card';import{Link}from'react-router-dom';import'./ReadPosts.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ReadPosts=function ReadPosts(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];// State to hold the search query\nvar _useState5=useState('newest'),_useState6=_slicedToArray(_useState5,2),sortType=_useState6[0],setSortType=_useState6[1];useEffect(function(){fetchPosts();},[sortType,search]);// Also depend on search state\nvar fetchPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var query,_yield$query,data,error;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:query=supabase.from('criteria').select();// Adding search functionality: filter posts by title\nif(search){query=query.ilike('title',\"%\".concat(search,\"%\"));}if(sortType==='newest'){query=query.order('created_at',{ascending:false});}else if(sortType==='upvotes'){query=query.order('upvotes',{ascending:false});}_context.next=5;return query;case 5:_yield$query=_context.sent;data=_yield$query.data;error=_yield$query.error;if(error){console.error('Error fetching posts:',error);}else{setPosts(data);}case 9:case\"end\":return _context.stop();}}},_callee);}));return function fetchPosts(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search posts by title...\",value:search,onChange:function onChange(e){return setSearch(e.target.value);}}),/*#__PURE__*/_jsxs(\"select\",{onChange:function onChange(e){return setSortType(e.target.value);},value:sortType,children:[/*#__PURE__*/_jsx(\"option\",{value:\"newest\",children:\"Newest First\"}),/*#__PURE__*/_jsx(\"option\",{value:\"upvotes\",children:\"Most Upvotes\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ReadPosts\",children:posts.length>0?posts.map(function(post){return/*#__PURE__*/_jsx(Card,{id:post.id,title:/*#__PURE__*/_jsx(Link,{to:\"/post/\".concat(post.id),children:post.title}),subtopic:post.subtopic,content:post.content},post.id);}):/*#__PURE__*/_jsx(\"h2\",{children:\"No New Posts \\uD83D\\uDE1E\"})})]});};export default ReadPosts;","map":{"version":3,"names":["React","useState","useEffect","supabase","Card","Link","ReadPosts","posts","setPosts","search","setSearch","sortType","setSortType","fetchPosts","query","from","select","ilike","order","ascending","data","error","console","e","target","value","length","map","post","id","title","subtopic","content"],"sources":["C:/Users/Lions/FullstackFinalProject/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../client';\r\nimport Card from '../components/Card';\r\nimport { Link } from 'react-router-dom';\r\nimport './ReadPosts.css';\r\n\r\nconst ReadPosts = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [search, setSearch] = useState('');  // State to hold the search query\r\n    const [sortType, setSortType] = useState('newest');\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, [sortType, search]);  // Also depend on search state\r\n\r\n    const fetchPosts = async () => {\r\n        let query = supabase.from('criteria').select();\r\n\r\n        // Adding search functionality: filter posts by title\r\n        if (search) {\r\n            query = query.ilike('title', `%${search}%`);\r\n        }\r\n\r\n        if (sortType === 'newest') {\r\n            query = query.order('created_at', { ascending: false });\r\n        } else if (sortType === 'upvotes') {\r\n            query = query.order('upvotes', { ascending: false });\r\n        }\r\n\r\n        const { data, error } = await query;\r\n        if (error) {\r\n            console.error('Error fetching posts:', error);\r\n        } else {\r\n            setPosts(data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search posts by title...\"\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n            <select onChange={(e) => setSortType(e.target.value)} value={sortType}>\r\n                <option value=\"newest\">Newest First</option>\r\n                <option value=\"upvotes\">Most Upvotes</option>\r\n            </select>\r\n            <div className=\"ReadPosts\">\r\n                {posts.length > 0 ? (\r\n                    posts.map((post) => (\r\n                        <Card key={post.id} id={post.id} title={<Link to={`/post/${post.id}`}>{post.title}</Link>} subtopic={post.subtopic} content={post.content} />\r\n                    ))\r\n                ) : (\r\n                    <h2>No New Posts ðŸ˜ž</h2>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReadPosts;\r\n"],"mappings":"mZAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAyB,WAAzB,CACA,MAAOC,KAAP,KAAiB,oBAAjB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAO,iBAAP,C,wFAEA,GAAMC,UAAS,CAAG,QAAZA,UAAY,EAAM,CACpB,cAA0BL,QAAQ,CAAC,EAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eACA,eAA4BP,QAAQ,CAAC,EAAD,CAApC,yCAAOQ,MAAP,eAAeC,SAAf,eAA2C;AAC3C,eAAgCT,QAAQ,CAAC,QAAD,CAAxC,yCAAOU,QAAP,eAAiBC,WAAjB,eAEAV,SAAS,CAAC,UAAM,CACZW,UAAU,GACb,CAFQ,CAEN,CAACF,QAAD,CAAWF,MAAX,CAFM,CAAT,CAEyB;AAEzB,GAAMI,WAAU,4FAAG,uKACXC,KADW,CACHX,QAAQ,CAACY,IAAT,CAAc,UAAd,EAA0BC,MAA1B,EADG,CAGf;AACA,GAAIP,MAAJ,CAAY,CACRK,KAAK,CAAGA,KAAK,CAACG,KAAN,CAAY,OAAZ,YAAyBR,MAAzB,MAAR,CACH,CAED,GAAIE,QAAQ,GAAK,QAAjB,CAA2B,CACvBG,KAAK,CAAGA,KAAK,CAACI,KAAN,CAAY,YAAZ,CAA0B,CAAEC,SAAS,CAAE,KAAb,CAA1B,CAAR,CACH,CAFD,IAEO,IAAIR,QAAQ,GAAK,SAAjB,CAA4B,CAC/BG,KAAK,CAAGA,KAAK,CAACI,KAAN,CAAY,SAAZ,CAAuB,CAAEC,SAAS,CAAE,KAAb,CAAvB,CAAR,CACH,CAZc,sBAceL,MAdf,mCAcPM,IAdO,cAcPA,IAdO,CAcDC,KAdC,cAcDA,KAdC,CAef,GAAIA,KAAJ,CAAW,CACPC,OAAO,CAACD,KAAR,CAAc,uBAAd,CAAuCA,KAAvC,EACH,CAFD,IAEO,CACHb,QAAQ,CAACY,IAAD,CAAR,CACH,CAnBc,sDAAH,kBAAVP,WAAU,0CAAhB,CAsBA,mBACI,oCACI,cACI,IAAI,CAAC,MADT,CAEI,WAAW,CAAC,0BAFhB,CAGI,KAAK,CAAEJ,MAHX,CAII,QAAQ,CAAE,kBAACc,CAAD,QAAOb,UAAS,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB,EAJd,EADJ,cAOI,gBAAQ,QAAQ,CAAE,kBAACF,CAAD,QAAOX,YAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EAAlB,CAAsD,KAAK,CAAEd,QAA7D,wBACI,eAAQ,KAAK,CAAC,QAAd,0BADJ,cAEI,eAAQ,KAAK,CAAC,SAAd,0BAFJ,GAPJ,cAWI,YAAK,SAAS,CAAC,WAAf,UACKJ,KAAK,CAACmB,MAAN,CAAe,CAAf,CACGnB,KAAK,CAACoB,GAAN,CAAU,SAACC,IAAD,qBACN,KAAC,IAAD,EAAoB,EAAE,CAAEA,IAAI,CAACC,EAA7B,CAAiC,KAAK,cAAE,KAAC,IAAD,EAAM,EAAE,iBAAWD,IAAI,CAACC,EAAhB,CAAR,UAA+BD,IAAI,CAACE,KAApC,EAAxC,CAA2F,QAAQ,CAAEF,IAAI,CAACG,QAA1G,CAAoH,OAAO,CAAEH,IAAI,CAACI,OAAlI,EAAWJ,IAAI,CAACC,EAAhB,CADM,EAAV,CADH,cAKG,iDANR,EAXJ,GADJ,CAuBH,CAtDD,CAwDA,cAAevB,UAAf"},"metadata":{},"sourceType":"module"}