{"ast":null,"code":"import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { format } from \"./format.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n/**\r\n * The {@link formatRelative} function options.\r\n */\n\n/**\r\n * @name formatRelative\r\n * @category Common Helpers\r\n * @summary Represent the date in words relative to the given base date.\r\n *\r\n * @description\r\n * Represent the date in words relative to the given base date.\r\n *\r\n * | Distance to the base date | Result                    |\r\n * |---------------------------|---------------------------|\r\n * | Previous 6 days           | last Sunday at 04:30 AM   |\r\n * | Last day                  | yesterday at 04:30 AM     |\r\n * | Same day                  | today at 04:30 AM         |\r\n * | Next day                  | tomorrow at 04:30 AM      |\r\n * | Next 6 days               | Sunday at 04:30 AM        |\r\n * | Other                     | 12/31/2017                |\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to format\r\n * @param baseDate - The date to compare with\r\n * @param options - An object with options\r\n *\r\n * @returns The date in words\r\n *\r\n * @throws `date` must not be Invalid Date\r\n * @throws `baseDate` must not be Invalid Date\r\n * @throws `options.locale` must contain `localize` property\r\n * @throws `options.locale` must contain `formatLong` property\r\n * @throws `options.locale` must contain `formatRelative` property\r\n *\r\n * @example\r\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\r\n * const result = formatRelative(subDays(new Date(), 6), new Date())\r\n * //=> \"last Thursday at 12:45 AM\"\r\n */\n\nexport function formatRelative(date, baseDate, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$weekStartsOn, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2;\n\n  var _date = toDate(date);\n\n  var _baseDate = toDate(baseDate);\n\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var weekStartsOn = (_ref2 = (_ref3 = (_ref4 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.weekStartsOn) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : 0;\n  var diff = differenceInCalendarDays(_date, _baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  var token;\n\n  if (diff < -6) {\n    token = \"other\";\n  } else if (diff < -1) {\n    token = \"lastWeek\";\n  } else if (diff < 0) {\n    token = \"yesterday\";\n  } else if (diff < 1) {\n    token = \"today\";\n  } else if (diff < 2) {\n    token = \"tomorrow\";\n  } else if (diff < 7) {\n    token = \"nextWeek\";\n  } else {\n    token = \"other\";\n  }\n\n  var formatStr = locale.formatRelative(token, _date, _baseDate, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n  return format(_date, formatStr, {\n    locale: locale,\n    weekStartsOn: weekStartsOn\n  });\n} // Fallback for modularized imports:\n\nexport default formatRelative;","map":{"version":3,"names":["differenceInCalendarDays","format","toDate","defaultLocale","getDefaultOptions","formatRelative","date","baseDate","options","_date","_baseDate","defaultOptions","locale","weekStartsOn","diff","isNaN","RangeError","token","formatStr"],"sources":["C:/Users/Lions/FullstackFinalProject/client/node_modules/date-fns/formatRelative.mjs"],"sourcesContent":["import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\r\nimport { format } from \"./format.mjs\";\r\nimport { toDate } from \"./toDate.mjs\";\r\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\r\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\r\n\r\n/**\r\n * The {@link formatRelative} function options.\r\n */\r\n\r\n/**\r\n * @name formatRelative\r\n * @category Common Helpers\r\n * @summary Represent the date in words relative to the given base date.\r\n *\r\n * @description\r\n * Represent the date in words relative to the given base date.\r\n *\r\n * | Distance to the base date | Result                    |\r\n * |---------------------------|---------------------------|\r\n * | Previous 6 days           | last Sunday at 04:30 AM   |\r\n * | Last day                  | yesterday at 04:30 AM     |\r\n * | Same day                  | today at 04:30 AM         |\r\n * | Next day                  | tomorrow at 04:30 AM      |\r\n * | Next 6 days               | Sunday at 04:30 AM        |\r\n * | Other                     | 12/31/2017                |\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to format\r\n * @param baseDate - The date to compare with\r\n * @param options - An object with options\r\n *\r\n * @returns The date in words\r\n *\r\n * @throws `date` must not be Invalid Date\r\n * @throws `baseDate` must not be Invalid Date\r\n * @throws `options.locale` must contain `localize` property\r\n * @throws `options.locale` must contain `formatLong` property\r\n * @throws `options.locale` must contain `formatRelative` property\r\n *\r\n * @example\r\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\r\n * const result = formatRelative(subDays(new Date(), 6), new Date())\r\n * //=> \"last Thursday at 12:45 AM\"\r\n */\r\nexport function formatRelative(date, baseDate, options) {\r\n  const _date = toDate(date);\r\n  const _baseDate = toDate(baseDate);\r\n\r\n  const defaultOptions = getDefaultOptions();\r\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\r\n  const weekStartsOn =\r\n    options?.weekStartsOn ??\r\n    options?.locale?.options?.weekStartsOn ??\r\n    defaultOptions.weekStartsOn ??\r\n    defaultOptions.locale?.options?.weekStartsOn ??\r\n    0;\r\n\r\n  const diff = differenceInCalendarDays(_date, _baseDate);\r\n\r\n  if (isNaN(diff)) {\r\n    throw new RangeError(\"Invalid time value\");\r\n  }\r\n\r\n  let token;\r\n  if (diff < -6) {\r\n    token = \"other\";\r\n  } else if (diff < -1) {\r\n    token = \"lastWeek\";\r\n  } else if (diff < 0) {\r\n    token = \"yesterday\";\r\n  } else if (diff < 1) {\r\n    token = \"today\";\r\n  } else if (diff < 2) {\r\n    token = \"tomorrow\";\r\n  } else if (diff < 7) {\r\n    token = \"nextWeek\";\r\n  } else {\r\n    token = \"other\";\r\n  }\r\n\r\n  const formatStr = locale.formatRelative(token, _date, _baseDate, {\r\n    locale,\r\n    weekStartsOn,\r\n  });\r\n  return format(_date, formatStr, { locale, weekStartsOn });\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default formatRelative;\r\n"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,gCAAzC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,OAAxC,EAAiD;EAAA;;EACtD,IAAMC,KAAK,GAAGP,MAAM,CAACI,IAAD,CAApB;;EACA,IAAMI,SAAS,GAAGR,MAAM,CAACK,QAAD,CAAxB;;EAEA,IAAMI,cAAc,GAAGP,iBAAiB,EAAxC;EACA,IAAMQ,MAAM,8BAAGJ,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEI,MAAZ,6DAAsBD,cAAc,CAACC,MAArC,uCAA+CT,aAA3D;EACA,IAAMU,YAAY,uDAChBL,OADgB,aAChBA,OADgB,uBAChBA,OAAO,CAAEK,YADO,yEAEhBL,OAFgB,aAEhBA,OAFgB,2CAEhBA,OAAO,CAAEI,MAFO,8EAEhB,iBAAiBJ,OAFD,0DAEhB,sBAA0BK,YAFV,yCAGhBF,cAAc,CAACE,YAHC,kEAIhBF,cAAc,CAACC,MAJC,oFAIhB,sBAAuBJ,OAJP,2DAIhB,uBAAgCK,YAJhB,yCAKhB,CALF;EAOA,IAAMC,IAAI,GAAGd,wBAAwB,CAACS,KAAD,EAAQC,SAAR,CAArC;;EAEA,IAAIK,KAAK,CAACD,IAAD,CAAT,EAAiB;IACf,MAAM,IAAIE,UAAJ,CAAe,oBAAf,CAAN;EACD;;EAED,IAAIC,KAAJ;;EACA,IAAIH,IAAI,GAAG,CAAC,CAAZ,EAAe;IACbG,KAAK,GAAG,OAAR;EACD,CAFD,MAEO,IAAIH,IAAI,GAAG,CAAC,CAAZ,EAAe;IACpBG,KAAK,GAAG,UAAR;EACD,CAFM,MAEA,IAAIH,IAAI,GAAG,CAAX,EAAc;IACnBG,KAAK,GAAG,WAAR;EACD,CAFM,MAEA,IAAIH,IAAI,GAAG,CAAX,EAAc;IACnBG,KAAK,GAAG,OAAR;EACD,CAFM,MAEA,IAAIH,IAAI,GAAG,CAAX,EAAc;IACnBG,KAAK,GAAG,UAAR;EACD,CAFM,MAEA,IAAIH,IAAI,GAAG,CAAX,EAAc;IACnBG,KAAK,GAAG,UAAR;EACD,CAFM,MAEA;IACLA,KAAK,GAAG,OAAR;EACD;;EAED,IAAMC,SAAS,GAAGN,MAAM,CAACP,cAAP,CAAsBY,KAAtB,EAA6BR,KAA7B,EAAoCC,SAApC,EAA+C;IAC/DE,MAAM,EAANA,MAD+D;IAE/DC,YAAY,EAAZA;EAF+D,CAA/C,CAAlB;EAIA,OAAOZ,MAAM,CAACQ,KAAD,EAAQS,SAAR,EAAmB;IAAEN,MAAM,EAANA,MAAF;IAAUC,YAAY,EAAZA;EAAV,CAAnB,CAAb;AACD,C,CAED;;AACA,eAAeR,cAAf"},"metadata":{},"sourceType":"module"}