{"ast":null,"code":"import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { isLeapYearIndex, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // Day of the month\n\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n\n      case \"do\":\n        return match.ordinalNumber(dateString, {\n          unit: \"date\"\n        });\n\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"Y\", \"R\", \"q\", \"Q\", \"w\", \"I\", \"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}","map":{"version":3,"names":["numericPatterns","Parser","isLeapYearIndex","parseNDigits","parseNumericPattern","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","DateParser","priority","subPriority","parse","dateString","token","match","date","ordinalNumber","unit","length","validate","value","year","getFullYear","isLeapYear","month","getMonth","set","_flags","setDate","setHours","incompatibleTokens"],"sources":["C:/Users/Lions/final-project-callbright-1/client/node_modules/date-fns/parse/_lib/parsers/DateParser.mjs"],"sourcesContent":["import { numericPatterns } from \"../constants.mjs\";\r\nimport { Parser } from \"../Parser.mjs\";\r\nimport {\r\n  isLeapYearIndex,\r\n  parseNDigits,\r\n  parseNumericPattern,\r\n} from \"../utils.mjs\";\r\n\r\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nconst DAYS_IN_MONTH_LEAP_YEAR = [\r\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\r\n];\r\n\r\n// Day of the month\r\nexport class DateParser extends Parser {\r\n  priority = 90;\r\n  subPriority = 1;\r\n\r\n  parse(dateString, token, match) {\r\n    switch (token) {\r\n      case \"d\":\r\n        return parseNumericPattern(numericPatterns.date, dateString);\r\n      case \"do\":\r\n        return match.ordinalNumber(dateString, { unit: \"date\" });\r\n      default:\r\n        return parseNDigits(token.length, dateString);\r\n    }\r\n  }\r\n\r\n  validate(date, value) {\r\n    const year = date.getFullYear();\r\n    const isLeapYear = isLeapYearIndex(year);\r\n    const month = date.getMonth();\r\n    if (isLeapYear) {\r\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\r\n    } else {\r\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\r\n    }\r\n  }\r\n\r\n  set(date, _flags, value) {\r\n    date.setDate(value);\r\n    date.setHours(0, 0, 0, 0);\r\n    return date;\r\n  }\r\n\r\n  incompatibleTokens = [\r\n    \"Y\",\r\n    \"R\",\r\n    \"q\",\r\n    \"Q\",\r\n    \"w\",\r\n    \"I\",\r\n    \"D\",\r\n    \"i\",\r\n    \"e\",\r\n    \"c\",\r\n    \"t\",\r\n    \"T\",\r\n  ];\r\n}\r\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SACEC,eADF,EAEEC,YAFF,EAGEC,mBAHF,QAIO,cAJP;AAMA,MAAMC,aAAa,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAAtB;AACA,MAAMC,uBAAuB,GAAG,CAC9B,EAD8B,EAC1B,EAD0B,EACtB,EADsB,EAClB,EADkB,EACd,EADc,EACV,EADU,EACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,EADV,EACc,EADd,CAAhC,C,CAIA;;AACA,OAAO,MAAMC,UAAN,SAAyBN,MAAzB,CAAgC;EACrCO,QAAQ,GAAG,EAAH;EACRC,WAAW,GAAG,CAAH;;EAEXC,KAAK,CAACC,UAAD,EAAaC,KAAb,EAAoBC,KAApB,EAA2B;IAC9B,QAAQD,KAAR;MACE,KAAK,GAAL;QACE,OAAOR,mBAAmB,CAACJ,eAAe,CAACc,IAAjB,EAAuBH,UAAvB,CAA1B;;MACF,KAAK,IAAL;QACE,OAAOE,KAAK,CAACE,aAAN,CAAoBJ,UAApB,EAAgC;UAAEK,IAAI,EAAE;QAAR,CAAhC,CAAP;;MACF;QACE,OAAOb,YAAY,CAACS,KAAK,CAACK,MAAP,EAAeN,UAAf,CAAnB;IANJ;EAQD;;EAEDO,QAAQ,CAACJ,IAAD,EAAOK,KAAP,EAAc;IACpB,MAAMC,IAAI,GAAGN,IAAI,CAACO,WAAL,EAAb;IACA,MAAMC,UAAU,GAAGpB,eAAe,CAACkB,IAAD,CAAlC;IACA,MAAMG,KAAK,GAAGT,IAAI,CAACU,QAAL,EAAd;;IACA,IAAIF,UAAJ,EAAgB;MACd,OAAOH,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAIb,uBAAuB,CAACiB,KAAD,CAArD;IACD,CAFD,MAEO;MACL,OAAOJ,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAId,aAAa,CAACkB,KAAD,CAA3C;IACD;EACF;;EAEDE,GAAG,CAACX,IAAD,EAAOY,MAAP,EAAeP,KAAf,EAAsB;IACvBL,IAAI,CAACa,OAAL,CAAaR,KAAb;IACAL,IAAI,CAACc,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;IACA,OAAOd,IAAP;EACD;;EAEDe,kBAAkB,GAAG,CACnB,GADmB,EAEnB,GAFmB,EAGnB,GAHmB,EAInB,GAJmB,EAKnB,GALmB,EAMnB,GANmB,EAOnB,GAPmB,EAQnB,GARmB,EASnB,GATmB,EAUnB,GAVmB,EAWnB,GAXmB,EAYnB,GAZmB,CAAH;AAhCmB"},"metadata":{},"sourceType":"module"}