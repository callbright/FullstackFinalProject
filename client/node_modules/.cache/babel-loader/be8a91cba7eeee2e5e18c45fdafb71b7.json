{"ast":null,"code":"import { startOfSecond } from \"./startOfSecond.mjs\";\n/**\r\n * @name isSameSecond\r\n * @category Second Helpers\r\n * @summary Are the given dates in the same second (and hour and day)?\r\n *\r\n * @description\r\n * Are the given dates in the same second (and hour and day)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n *\r\n * @returns The dates are in the same second (and hour and day)\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500 in the same second?\r\n * const result = isSameSecond(\r\n *   new Date(2014, 8, 4, 6, 30, 15),\r\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\r\n * )\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:15.000 and 4 September 2014 06:01.15.000 in the same second?\r\n * const result = isSameSecond(\r\n *   new Date(2014, 8, 4, 6, 0, 15),\r\n *   new Date(2014, 8, 4, 6, 1, 15)\r\n * )\r\n * //=> false\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:15.000 and 5 September 2014 06:00.15.000 in the same second?\r\n * const result = isSameSecond(\r\n *   new Date(2014, 8, 4, 6, 0, 15),\r\n *   new Date(2014, 8, 5, 6, 0, 15)\r\n * )\r\n * //=> false\r\n */\n\nexport function isSameSecond(dateLeft, dateRight) {\n  var dateLeftStartOfSecond = startOfSecond(dateLeft);\n  var dateRightStartOfSecond = startOfSecond(dateRight);\n  return +dateLeftStartOfSecond === +dateRightStartOfSecond;\n} // Fallback for modularized imports:\n\nexport default isSameSecond;","map":{"version":3,"names":["startOfSecond","isSameSecond","dateLeft","dateRight","dateLeftStartOfSecond","dateRightStartOfSecond"],"sources":["C:/Users/Lions/FullstackFinalProject/client/node_modules/date-fns/isSameSecond.mjs"],"sourcesContent":["import { startOfSecond } from \"./startOfSecond.mjs\";\r\n\r\n/**\r\n * @name isSameSecond\r\n * @category Second Helpers\r\n * @summary Are the given dates in the same second (and hour and day)?\r\n *\r\n * @description\r\n * Are the given dates in the same second (and hour and day)?\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The first date to check\r\n * @param dateRight - The second date to check\r\n *\r\n * @returns The dates are in the same second (and hour and day)\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500 in the same second?\r\n * const result = isSameSecond(\r\n *   new Date(2014, 8, 4, 6, 30, 15),\r\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\r\n * )\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:15.000 and 4 September 2014 06:01.15.000 in the same second?\r\n * const result = isSameSecond(\r\n *   new Date(2014, 8, 4, 6, 0, 15),\r\n *   new Date(2014, 8, 4, 6, 1, 15)\r\n * )\r\n * //=> false\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:15.000 and 5 September 2014 06:00.15.000 in the same second?\r\n * const result = isSameSecond(\r\n *   new Date(2014, 8, 4, 6, 0, 15),\r\n *   new Date(2014, 8, 5, 6, 0, 15)\r\n * )\r\n * //=> false\r\n */\r\nexport function isSameSecond(dateLeft, dateRight) {\r\n  const dateLeftStartOfSecond = startOfSecond(dateLeft);\r\n  const dateRightStartOfSecond = startOfSecond(dateRight);\r\n\r\n  return +dateLeftStartOfSecond === +dateRightStartOfSecond;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default isSameSecond;\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,qBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,SAAhC,EAA2C;EAChD,IAAMC,qBAAqB,GAAGJ,aAAa,CAACE,QAAD,CAA3C;EACA,IAAMG,sBAAsB,GAAGL,aAAa,CAACG,SAAD,CAA5C;EAEA,OAAO,CAACC,qBAAD,KAA2B,CAACC,sBAAnC;AACD,C,CAED;;AACA,eAAeJ,YAAf"},"metadata":{},"sourceType":"module"}