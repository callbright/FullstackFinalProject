{"ast":null,"code":"export class AuthError extends Error {\n  constructor(message, status, code) {\n    super(message);\n    this.__isAuthError = true;\n    this.name = 'AuthError';\n    this.status = status;\n    this.code = code;\n  }\n\n}\nexport function isAuthError(error) {\n  return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n  constructor(message, status, code) {\n    super(message, status, code);\n    this.name = 'AuthApiError';\n    this.status = status;\n    this.code = code;\n  }\n\n}\nexport function isAuthApiError(error) {\n  return isAuthError(error) && error.name === 'AuthApiError';\n}\nexport class AuthUnknownError extends AuthError {\n  constructor(message, originalError) {\n    super(message);\n    this.name = 'AuthUnknownError';\n    this.originalError = originalError;\n  }\n\n}\nexport class CustomAuthError extends AuthError {\n  constructor(message, name, status, code) {\n    super(message, status, code);\n    this.name = name;\n    this.status = status;\n  }\n\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n  constructor() {\n    super('Auth session missing!', 'AuthSessionMissingError', 400, undefined);\n  }\n\n}\nexport class AuthInvalidTokenResponseError extends CustomAuthError {\n  constructor() {\n    super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500, undefined);\n  }\n\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n  constructor(message) {\n    super(message, 'AuthInvalidCredentialsError', 400, undefined);\n  }\n\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n  constructor(message) {\n    let details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(message, 'AuthImplicitGrantRedirectError', 500, undefined);\n    this.details = null;\n    this.details = details;\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      details: this.details\n    };\n  }\n\n}\nexport class AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n  constructor(message) {\n    let details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(message, 'AuthPKCEGrantCodeExchangeError', 500, undefined);\n    this.details = null;\n    this.details = details;\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      details: this.details\n    };\n  }\n\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n  constructor(message, status) {\n    super(message, 'AuthRetryableFetchError', status, undefined);\n  }\n\n}\nexport function isAuthRetryableFetchError(error) {\n  return isAuthError(error) && error.name === 'AuthRetryableFetchError';\n}\n/**\r\n * This error is thrown on certain methods when the password used is deemed\r\n * weak. Inspect the reasons to identify what password strength rules are\r\n * inadequate.\r\n */\n\nexport class AuthWeakPasswordError extends CustomAuthError {\n  constructor(message, status, reasons) {\n    super(message, 'AuthWeakPasswordError', status, 'weak_password');\n    this.reasons = reasons;\n  }\n\n}\nexport function isAuthWeakPasswordError(error) {\n  return isAuthError(error) && error.name === 'AuthWeakPasswordError';\n}","map":{"version":3,"mappings":"AAGA,OAAM,MAAOA,SAAP,SAAyBC,KAAzB,CAA8B;EAclCC,YAAYC,OAAZ,EAA6BC,MAA7B,EAA8CC,IAA9C,EAA2D;IACzD,MAAMF,OAAN;IAHQ,qBAAgB,IAAhB;IAIR,KAAKG,IAAL,GAAY,WAAZ;IACA,KAAKF,MAAL,GAAcA,MAAd;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACD;;AAnBiC;AAsBpC,OAAM,SAAUE,WAAV,CAAsBC,KAAtB,EAAoC;EACxC,OAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAvC,IAA+C,mBAAmBA,KAAzE;AACD;AAED,OAAM,MAAOC,YAAP,SAA4BT,SAA5B,CAAqC;EAGzCE,YAAYC,OAAZ,EAA6BC,MAA7B,EAA6CC,IAA7C,EAAqE;IACnE,MAAMF,OAAN,EAAeC,MAAf,EAAuBC,IAAvB;IACA,KAAKC,IAAL,GAAY,cAAZ;IACA,KAAKF,MAAL,GAAcA,MAAd;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACD;;AARwC;AAW3C,OAAM,SAAUK,cAAV,CAAyBF,KAAzB,EAAuC;EAC3C,OAAOD,WAAW,CAACC,KAAD,CAAX,IAAsBA,KAAK,CAACF,IAAN,KAAe,cAA5C;AACD;AAED,OAAM,MAAOK,gBAAP,SAAgCX,SAAhC,CAAyC;EAG7CE,YAAYC,OAAZ,EAA6BS,aAA7B,EAAmD;IACjD,MAAMT,OAAN;IACA,KAAKG,IAAL,GAAY,kBAAZ;IACA,KAAKM,aAAL,GAAqBA,aAArB;EACD;;AAP4C;AAU/C,OAAM,MAAOC,eAAP,SAA+Bb,SAA/B,CAAwC;EAI5CE,YAAYC,OAAZ,EAA6BG,IAA7B,EAA2CF,MAA3C,EAA2DC,IAA3D,EAAmF;IACjF,MAAMF,OAAN,EAAeC,MAAf,EAAuBC,IAAvB;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKF,MAAL,GAAcA,MAAd;EACD;;AAR2C;AAW9C,OAAM,MAAOU,uBAAP,SAAuCD,eAAvC,CAAsD;EAC1DX;IACE,MAAM,uBAAN,EAA+B,yBAA/B,EAA0D,GAA1D,EAA+Da,SAA/D;EACD;;AAHyD;AAM5D,OAAM,MAAOC,6BAAP,SAA6CH,eAA7C,CAA4D;EAChEX;IACE,MAAM,8BAAN,EAAsC,+BAAtC,EAAuE,GAAvE,EAA4Ea,SAA5E;EACD;;AAH+D;AAMlE,OAAM,MAAOE,2BAAP,SAA2CJ,eAA3C,CAA0D;EAC9DX,YAAYC,OAAZ,EAA2B;IACzB,MAAMA,OAAN,EAAe,6BAAf,EAA8C,GAA9C,EAAmDY,SAAnD;EACD;;AAH6D;AAMhE,OAAM,MAAOG,8BAAP,SAA8CL,eAA9C,CAA6D;EAEjEX,YAAYC,OAAZ,EAAmF;IAAA,IAAtDgB,OAAsD,uEAAJ,IAAI;IACjF,MAAMhB,OAAN,EAAe,gCAAf,EAAiD,GAAjD,EAAsDY,SAAtD;IAFF,eAAkD,IAAlD;IAGE,KAAKI,OAAL,GAAeA,OAAf;EACD;;EAEDC,MAAM;IACJ,OAAO;MACLd,IAAI,EAAE,KAAKA,IADN;MAELH,OAAO,EAAE,KAAKA,OAFT;MAGLC,MAAM,EAAE,KAAKA,MAHR;MAILe,OAAO,EAAE,KAAKA;IAJT,CAAP;EAMD;;AAdgE;AAiBnE,OAAM,MAAOE,8BAAP,SAA8CR,eAA9C,CAA6D;EAGjEX,YAAYC,OAAZ,EAAmF;IAAA,IAAtDgB,OAAsD,uEAAJ,IAAI;IACjF,MAAMhB,OAAN,EAAe,gCAAf,EAAiD,GAAjD,EAAsDY,SAAtD;IAHF,eAAkD,IAAlD;IAIE,KAAKI,OAAL,GAAeA,OAAf;EACD;;EAEDC,MAAM;IACJ,OAAO;MACLd,IAAI,EAAE,KAAKA,IADN;MAELH,OAAO,EAAE,KAAKA,OAFT;MAGLC,MAAM,EAAE,KAAKA,MAHR;MAILe,OAAO,EAAE,KAAKA;IAJT,CAAP;EAMD;;AAfgE;AAkBnE,OAAM,MAAOG,uBAAP,SAAuCT,eAAvC,CAAsD;EAC1DX,YAAYC,OAAZ,EAA6BC,MAA7B,EAA2C;IACzC,MAAMD,OAAN,EAAe,yBAAf,EAA0CC,MAA1C,EAAkDW,SAAlD;EACD;;AAHyD;AAM5D,OAAM,SAAUQ,yBAAV,CAAoCf,KAApC,EAAkD;EACtD,OAAOD,WAAW,CAACC,KAAD,CAAX,IAAsBA,KAAK,CAACF,IAAN,KAAe,yBAA5C;AACD;AAED;;;;;;AAKA,OAAM,MAAOkB,qBAAP,SAAqCX,eAArC,CAAoD;EAMxDX,YAAYC,OAAZ,EAA6BC,MAA7B,EAA6CqB,OAA7C,EAA8D;IAC5D,MAAMtB,OAAN,EAAe,uBAAf,EAAwCC,MAAxC,EAAgD,eAAhD;IAEA,KAAKqB,OAAL,GAAeA,OAAf;EACD;;AAVuD;AAa1D,OAAM,SAAUC,uBAAV,CAAkClB,KAAlC,EAAgD;EACpD,OAAOD,WAAW,CAACC,KAAD,CAAX,IAAsBA,KAAK,CAACF,IAAN,KAAe,uBAA5C;AACD","names":["AuthError","Error","constructor","message","status","code","name","isAuthError","error","AuthApiError","isAuthApiError","AuthUnknownError","originalError","CustomAuthError","AuthSessionMissingError","undefined","AuthInvalidTokenResponseError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","details","toJSON","AuthPKCEGrantCodeExchangeError","AuthRetryableFetchError","isAuthRetryableFetchError","AuthWeakPasswordError","reasons","isAuthWeakPasswordError"],"sources":["C:\\Users\\Lions\\final-project-callbright-1\\client\\node_modules\\@supabase\\auth-js\\src\\lib\\errors.ts"],"sourcesContent":["import { WeakPasswordReasons } from './types'\r\nimport { ErrorCode } from './error-codes'\r\n\r\nexport class AuthError extends Error {\r\n  /**\r\n   * Error code associated with the error. Most errors coming from\r\n   * HTTP responses will have a code, though some errors that occur\r\n   * before a response is received will not have one present. In that\r\n   * case {@link #status} will also be undefined.\r\n   */\r\n  code: ErrorCode | string | undefined\r\n\r\n  /** HTTP status code that caused the error. */\r\n  status: number | undefined\r\n\r\n  protected __isAuthError = true\r\n\r\n  constructor(message: string, status?: number, code?: string) {\r\n    super(message)\r\n    this.name = 'AuthError'\r\n    this.status = status\r\n    this.code = code\r\n  }\r\n}\r\n\r\nexport function isAuthError(error: unknown): error is AuthError {\r\n  return typeof error === 'object' && error !== null && '__isAuthError' in error\r\n}\r\n\r\nexport class AuthApiError extends AuthError {\r\n  status: number\r\n\r\n  constructor(message: string, status: number, code: string | undefined) {\r\n    super(message, status, code)\r\n    this.name = 'AuthApiError'\r\n    this.status = status\r\n    this.code = code\r\n  }\r\n}\r\n\r\nexport function isAuthApiError(error: unknown): error is AuthApiError {\r\n  return isAuthError(error) && error.name === 'AuthApiError'\r\n}\r\n\r\nexport class AuthUnknownError extends AuthError {\r\n  originalError: unknown\r\n\r\n  constructor(message: string, originalError: unknown) {\r\n    super(message)\r\n    this.name = 'AuthUnknownError'\r\n    this.originalError = originalError\r\n  }\r\n}\r\n\r\nexport class CustomAuthError extends AuthError {\r\n  name: string\r\n  status: number\r\n\r\n  constructor(message: string, name: string, status: number, code: string | undefined) {\r\n    super(message, status, code)\r\n    this.name = name\r\n    this.status = status\r\n  }\r\n}\r\n\r\nexport class AuthSessionMissingError extends CustomAuthError {\r\n  constructor() {\r\n    super('Auth session missing!', 'AuthSessionMissingError', 400, undefined)\r\n  }\r\n}\r\n\r\nexport class AuthInvalidTokenResponseError extends CustomAuthError {\r\n  constructor() {\r\n    super('Auth session or user missing', 'AuthInvalidTokenResponseError', 500, undefined)\r\n  }\r\n}\r\n\r\nexport class AuthInvalidCredentialsError extends CustomAuthError {\r\n  constructor(message: string) {\r\n    super(message, 'AuthInvalidCredentialsError', 400, undefined)\r\n  }\r\n}\r\n\r\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\r\n  details: { error: string; code: string } | null = null\r\n  constructor(message: string, details: { error: string; code: string } | null = null) {\r\n    super(message, 'AuthImplicitGrantRedirectError', 500, undefined)\r\n    this.details = details\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      name: this.name,\r\n      message: this.message,\r\n      status: this.status,\r\n      details: this.details,\r\n    }\r\n  }\r\n}\r\n\r\nexport class AuthPKCEGrantCodeExchangeError extends CustomAuthError {\r\n  details: { error: string; code: string } | null = null\r\n\r\n  constructor(message: string, details: { error: string; code: string } | null = null) {\r\n    super(message, 'AuthPKCEGrantCodeExchangeError', 500, undefined)\r\n    this.details = details\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      name: this.name,\r\n      message: this.message,\r\n      status: this.status,\r\n      details: this.details,\r\n    }\r\n  }\r\n}\r\n\r\nexport class AuthRetryableFetchError extends CustomAuthError {\r\n  constructor(message: string, status: number) {\r\n    super(message, 'AuthRetryableFetchError', status, undefined)\r\n  }\r\n}\r\n\r\nexport function isAuthRetryableFetchError(error: unknown): error is AuthRetryableFetchError {\r\n  return isAuthError(error) && error.name === 'AuthRetryableFetchError'\r\n}\r\n\r\n/**\r\n * This error is thrown on certain methods when the password used is deemed\r\n * weak. Inspect the reasons to identify what password strength rules are\r\n * inadequate.\r\n */\r\nexport class AuthWeakPasswordError extends CustomAuthError {\r\n  /**\r\n   * Reasons why the password is deemed weak.\r\n   */\r\n  reasons: WeakPasswordReasons[]\r\n\r\n  constructor(message: string, status: number, reasons: string[]) {\r\n    super(message, 'AuthWeakPasswordError', status, 'weak_password')\r\n\r\n    this.reasons = reasons\r\n  }\r\n}\r\n\r\nexport function isAuthWeakPasswordError(error: unknown): error is AuthWeakPasswordError {\r\n  return isAuthError(error) && error.name === 'AuthWeakPasswordError'\r\n}\r\n"]},"metadata":{},"sourceType":"module"}