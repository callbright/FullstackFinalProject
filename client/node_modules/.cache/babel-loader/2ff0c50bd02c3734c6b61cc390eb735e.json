{"ast":null,"code":"var dateLongFormatter = function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({\n        width: \"short\"\n      });\n\n    case \"PP\":\n      return formatLong.date({\n        width: \"medium\"\n      });\n\n    case \"PPP\":\n      return formatLong.date({\n        width: \"long\"\n      });\n\n    case \"PPPP\":\n    default:\n      return formatLong.date({\n        width: \"full\"\n      });\n  }\n};\n\nvar timeLongFormatter = function timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({\n        width: \"short\"\n      });\n\n    case \"pp\":\n      return formatLong.time({\n        width: \"medium\"\n      });\n\n    case \"ppp\":\n      return formatLong.time({\n        width: \"long\"\n      });\n\n    case \"pppp\":\n    default:\n      return formatLong.time({\n        width: \"full\"\n      });\n  }\n};\n\nvar dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({\n        width: \"short\"\n      });\n      break;\n\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({\n        width: \"medium\"\n      });\n      break;\n\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({\n        width: \"long\"\n      });\n      break;\n\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: \"full\"\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong)).replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport var longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};","map":{"version":3,"names":["dateLongFormatter","pattern","formatLong","date","width","timeLongFormatter","time","dateTimeLongFormatter","matchResult","match","datePattern","timePattern","dateTimeFormat","dateTime","replace","longFormatters","p","P"],"sources":["C:/Users/Lions/FullstackFinalProject/client/node_modules/date-fns/_lib/format/longFormatters.mjs"],"sourcesContent":["const dateLongFormatter = (pattern, formatLong) => {\r\n  switch (pattern) {\r\n    case \"P\":\r\n      return formatLong.date({ width: \"short\" });\r\n    case \"PP\":\r\n      return formatLong.date({ width: \"medium\" });\r\n    case \"PPP\":\r\n      return formatLong.date({ width: \"long\" });\r\n    case \"PPPP\":\r\n    default:\r\n      return formatLong.date({ width: \"full\" });\r\n  }\r\n};\r\n\r\nconst timeLongFormatter = (pattern, formatLong) => {\r\n  switch (pattern) {\r\n    case \"p\":\r\n      return formatLong.time({ width: \"short\" });\r\n    case \"pp\":\r\n      return formatLong.time({ width: \"medium\" });\r\n    case \"ppp\":\r\n      return formatLong.time({ width: \"long\" });\r\n    case \"pppp\":\r\n    default:\r\n      return formatLong.time({ width: \"full\" });\r\n  }\r\n};\r\n\r\nconst dateTimeLongFormatter = (pattern, formatLong) => {\r\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\r\n  const datePattern = matchResult[1];\r\n  const timePattern = matchResult[2];\r\n\r\n  if (!timePattern) {\r\n    return dateLongFormatter(pattern, formatLong);\r\n  }\r\n\r\n  let dateTimeFormat;\r\n\r\n  switch (datePattern) {\r\n    case \"P\":\r\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\r\n      break;\r\n    case \"PP\":\r\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\r\n      break;\r\n    case \"PPP\":\r\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\r\n      break;\r\n    case \"PPPP\":\r\n    default:\r\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\r\n      break;\r\n  }\r\n\r\n  return dateTimeFormat\r\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\r\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\r\n};\r\n\r\nexport const longFormatters = {\r\n  p: timeLongFormatter,\r\n  P: dateTimeLongFormatter,\r\n};\r\n"],"mappings":"AAAA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,OAAD,EAAUC,UAAV,EAAyB;EACjD,QAAQD,OAAR;IACE,KAAK,GAAL;MACE,OAAOC,UAAU,CAACC,IAAX,CAAgB;QAAEC,KAAK,EAAE;MAAT,CAAhB,CAAP;;IACF,KAAK,IAAL;MACE,OAAOF,UAAU,CAACC,IAAX,CAAgB;QAAEC,KAAK,EAAE;MAAT,CAAhB,CAAP;;IACF,KAAK,KAAL;MACE,OAAOF,UAAU,CAACC,IAAX,CAAgB;QAAEC,KAAK,EAAE;MAAT,CAAhB,CAAP;;IACF,KAAK,MAAL;IACA;MACE,OAAOF,UAAU,CAACC,IAAX,CAAgB;QAAEC,KAAK,EAAE;MAAT,CAAhB,CAAP;EATJ;AAWD,CAZD;;AAcA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,OAAD,EAAUC,UAAV,EAAyB;EACjD,QAAQD,OAAR;IACE,KAAK,GAAL;MACE,OAAOC,UAAU,CAACI,IAAX,CAAgB;QAAEF,KAAK,EAAE;MAAT,CAAhB,CAAP;;IACF,KAAK,IAAL;MACE,OAAOF,UAAU,CAACI,IAAX,CAAgB;QAAEF,KAAK,EAAE;MAAT,CAAhB,CAAP;;IACF,KAAK,KAAL;MACE,OAAOF,UAAU,CAACI,IAAX,CAAgB;QAAEF,KAAK,EAAE;MAAT,CAAhB,CAAP;;IACF,KAAK,MAAL;IACA;MACE,OAAOF,UAAU,CAACI,IAAX,CAAgB;QAAEF,KAAK,EAAE;MAAT,CAAhB,CAAP;EATJ;AAWD,CAZD;;AAcA,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACN,OAAD,EAAUC,UAAV,EAAyB;EACrD,IAAMM,WAAW,GAAGP,OAAO,CAACQ,KAAR,CAAc,WAAd,KAA8B,EAAlD;EACA,IAAMC,WAAW,GAAGF,WAAW,CAAC,CAAD,CAA/B;EACA,IAAMG,WAAW,GAAGH,WAAW,CAAC,CAAD,CAA/B;;EAEA,IAAI,CAACG,WAAL,EAAkB;IAChB,OAAOX,iBAAiB,CAACC,OAAD,EAAUC,UAAV,CAAxB;EACD;;EAED,IAAIU,cAAJ;;EAEA,QAAQF,WAAR;IACE,KAAK,GAAL;MACEE,cAAc,GAAGV,UAAU,CAACW,QAAX,CAAoB;QAAET,KAAK,EAAE;MAAT,CAApB,CAAjB;MACA;;IACF,KAAK,IAAL;MACEQ,cAAc,GAAGV,UAAU,CAACW,QAAX,CAAoB;QAAET,KAAK,EAAE;MAAT,CAApB,CAAjB;MACA;;IACF,KAAK,KAAL;MACEQ,cAAc,GAAGV,UAAU,CAACW,QAAX,CAAoB;QAAET,KAAK,EAAE;MAAT,CAApB,CAAjB;MACA;;IACF,KAAK,MAAL;IACA;MACEQ,cAAc,GAAGV,UAAU,CAACW,QAAX,CAAoB;QAAET,KAAK,EAAE;MAAT,CAApB,CAAjB;MACA;EAbJ;;EAgBA,OAAOQ,cAAc,CAClBE,OADI,CACI,UADJ,EACgBd,iBAAiB,CAACU,WAAD,EAAcR,UAAd,CADjC,EAEJY,OAFI,CAEI,UAFJ,EAEgBT,iBAAiB,CAACM,WAAD,EAAcT,UAAd,CAFjC,CAAP;AAGD,CA9BD;;AAgCA,OAAO,IAAMa,cAAc,GAAG;EAC5BC,CAAC,EAAEX,iBADyB;EAE5BY,CAAC,EAAEV;AAFyB,CAAvB"},"metadata":{},"sourceType":"module"}