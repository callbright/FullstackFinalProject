{"ast":null,"code":"import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { millisecondsInMinute } from \"./constants.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n/**\r\n * The {@link differenceInMinutes} function options.\r\n */\n\n/**\r\n * @name differenceInMinutes\r\n * @category Minute Helpers\r\n * @summary Get the number of minutes between the given dates.\r\n *\r\n * @description\r\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The later date\r\n * @param dateRight - The earlier date\r\n * @param options - An object with options.\r\n *\r\n * @returns The number of minutes\r\n *\r\n * @example\r\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\r\n * const result = differenceInMinutes(\r\n *   new Date(2014, 6, 2, 12, 20, 0),\r\n *   new Date(2014, 6, 2, 12, 7, 59)\r\n * )\r\n * //=> 12\r\n *\r\n * @example\r\n * // How many minutes are between 10:01:59 and 10:00:00\r\n * const result = differenceInMinutes(\r\n *   new Date(2000, 0, 1, 10, 0, 0),\r\n *   new Date(2000, 0, 1, 10, 1, 59)\r\n * )\r\n * //=> -1\r\n */\n\nexport function differenceInMinutes(dateLeft, dateRight, options) {\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n} // Fallback for modularized imports:\n\nexport default differenceInMinutes;","map":{"version":3,"names":["getRoundingMethod","millisecondsInMinute","differenceInMilliseconds","differenceInMinutes","dateLeft","dateRight","options","diff","roundingMethod"],"sources":["C:/Users/Lions/FullstackFinalProject/client/node_modules/date-fns/differenceInMinutes.mjs"],"sourcesContent":["import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\r\nimport { millisecondsInMinute } from \"./constants.mjs\";\r\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\r\n\r\n/**\r\n * The {@link differenceInMinutes} function options.\r\n */\r\n\r\n/**\r\n * @name differenceInMinutes\r\n * @category Minute Helpers\r\n * @summary Get the number of minutes between the given dates.\r\n *\r\n * @description\r\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param dateLeft - The later date\r\n * @param dateRight - The earlier date\r\n * @param options - An object with options.\r\n *\r\n * @returns The number of minutes\r\n *\r\n * @example\r\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\r\n * const result = differenceInMinutes(\r\n *   new Date(2014, 6, 2, 12, 20, 0),\r\n *   new Date(2014, 6, 2, 12, 7, 59)\r\n * )\r\n * //=> 12\r\n *\r\n * @example\r\n * // How many minutes are between 10:01:59 and 10:00:00\r\n * const result = differenceInMinutes(\r\n *   new Date(2000, 0, 1, 10, 0, 0),\r\n *   new Date(2000, 0, 1, 10, 1, 59)\r\n * )\r\n * //=> -1\r\n */\r\nexport function differenceInMinutes(dateLeft, dateRight, options) {\r\n  const diff =\r\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\r\n  return getRoundingMethod(options?.roundingMethod)(diff);\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default differenceInMinutes;\r\n"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,8BAAlC;AACA,SAASC,oBAAT,QAAqC,iBAArC;AACA,SAASC,wBAAT,QAAyC,gCAAzC;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,SAAvC,EAAkDC,OAAlD,EAA2D;EAChE,IAAMC,IAAI,GACRL,wBAAwB,CAACE,QAAD,EAAWC,SAAX,CAAxB,GAAgDJ,oBADlD;EAEA,OAAOD,iBAAiB,CAACM,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEE,cAAV,CAAjB,CAA2CD,IAA3C,CAAP;AACD,C,CAED;;AACA,eAAeJ,mBAAf"},"metadata":{},"sourceType":"module"}