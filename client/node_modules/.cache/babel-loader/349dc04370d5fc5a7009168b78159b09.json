{"ast":null,"code":"import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n/**\r\n * @name endOfISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Return the end of an ISO week-numbering year for the given date.\r\n *\r\n * @description\r\n * Return the end of an ISO week-numbering year,\r\n * which always starts 3 days before the year's first Thursday.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The original date\r\n *\r\n * @returns The end of an ISO week-numbering year\r\n *\r\n * @example\r\n * // The end of an ISO week-numbering year for 2 July 2005:\r\n * const result = endOfISOWeekYear(new Date(2005, 6, 2))\r\n * //=> Sun Jan 01 2006 23:59:59.999\r\n */\n\nexport function endOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n\n  const _date = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  _date.setMilliseconds(_date.getMilliseconds() - 1);\n\n  return _date;\n} // Fallback for modularized imports:\n\nexport default endOfISOWeekYear;","map":{"version":3,"names":["getISOWeekYear","startOfISOWeek","constructFrom","endOfISOWeekYear","date","year","fourthOfJanuaryOfNextYear","setFullYear","setHours","_date","setMilliseconds","getMilliseconds"],"sources":["C:/Users/Lions/final-project-callbright-1/client/node_modules/date-fns/endOfISOWeekYear.mjs"],"sourcesContent":["import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\r\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\r\nimport { constructFrom } from \"./constructFrom.mjs\";\r\n\r\n/**\r\n * @name endOfISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Return the end of an ISO week-numbering year for the given date.\r\n *\r\n * @description\r\n * Return the end of an ISO week-numbering year,\r\n * which always starts 3 days before the year's first Thursday.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The original date\r\n *\r\n * @returns The end of an ISO week-numbering year\r\n *\r\n * @example\r\n * // The end of an ISO week-numbering year for 2 July 2005:\r\n * const result = endOfISOWeekYear(new Date(2005, 6, 2))\r\n * //=> Sun Jan 01 2006 23:59:59.999\r\n */\r\nexport function endOfISOWeekYear(date) {\r\n  const year = getISOWeekYear(date);\r\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\r\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\r\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\r\n  const _date = startOfISOWeek(fourthOfJanuaryOfNextYear);\r\n  _date.setMilliseconds(_date.getMilliseconds() - 1);\r\n  return _date;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default endOfISOWeekYear;\r\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,sBAA/B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;EACrC,MAAMC,IAAI,GAAGL,cAAc,CAACI,IAAD,CAA3B;EACA,MAAME,yBAAyB,GAAGJ,aAAa,CAACE,IAAD,EAAO,CAAP,CAA/C;EACAE,yBAAyB,CAACC,WAA1B,CAAsCF,IAAI,GAAG,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD;EACAC,yBAAyB,CAACE,QAA1B,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C;;EACA,MAAMC,KAAK,GAAGR,cAAc,CAACK,yBAAD,CAA5B;;EACAG,KAAK,CAACC,eAAN,CAAsBD,KAAK,CAACE,eAAN,KAA0B,CAAhD;;EACA,OAAOF,KAAP;AACD,C,CAED;;AACA,eAAeN,gBAAf"},"metadata":{},"sourceType":"module"}