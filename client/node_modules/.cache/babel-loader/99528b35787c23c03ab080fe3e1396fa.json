{"ast":null,"code":"import { subDays } from \"./subDays.mjs\";\nimport { subMonths } from \"./subMonths.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n/**\r\n * @name sub\r\n * @category Common Helpers\r\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @description\r\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\r\n *\r\n * | Key     | Description                        |\r\n * |---------|------------------------------------|\r\n * | years   | Amount of years to be subtracted   |\r\n * | months  | Amount of months to be subtracted  |\r\n * | weeks   | Amount of weeks to be subtracted   |\r\n * | days    | Amount of days to be subtracted    |\r\n * | hours   | Amount of hours to be subtracted   |\r\n * | minutes | Amount of minutes to be subtracted |\r\n * | seconds | Amount of seconds to be subtracted |\r\n *\r\n * All values default to 0\r\n *\r\n * @returns The new date with the seconds subtracted\r\n *\r\n * @example\r\n * // Subtract the following duration from 15 June 2017 15:29:20\r\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\r\n *   years: 2,\r\n *   months: 9,\r\n *   weeks: 1,\r\n *   days: 7,\r\n *   hours: 5,\r\n *   minutes: 9,\r\n *   seconds: 30\r\n * })\r\n * //=> Mon Sep 1 2014 10:19:50\r\n */\n\nexport function sub(date, duration) {\n  var _duration$years = duration.years,\n      years = _duration$years === void 0 ? 0 : _duration$years,\n      _duration$months = duration.months,\n      months = _duration$months === void 0 ? 0 : _duration$months,\n      _duration$weeks = duration.weeks,\n      weeks = _duration$weeks === void 0 ? 0 : _duration$weeks,\n      _duration$days = duration.days,\n      days = _duration$days === void 0 ? 0 : _duration$days,\n      _duration$hours = duration.hours,\n      hours = _duration$hours === void 0 ? 0 : _duration$hours,\n      _duration$minutes = duration.minutes,\n      minutes = _duration$minutes === void 0 ? 0 : _duration$minutes,\n      _duration$seconds = duration.seconds,\n      seconds = _duration$seconds === void 0 ? 0 : _duration$seconds; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(date, months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = constructFrom(date, dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n} // Fallback for modularized imports:\n\nexport default sub;","map":{"version":3,"names":["subDays","subMonths","constructFrom","sub","date","duration","years","months","weeks","days","hours","minutes","seconds","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","finalDate","getTime"],"sources":["C:/Users/Lions/FullstackFinalProject/client/node_modules/date-fns/sub.mjs"],"sourcesContent":["import { subDays } from \"./subDays.mjs\";\r\nimport { subMonths } from \"./subMonths.mjs\";\r\nimport { constructFrom } from \"./constructFrom.mjs\";\r\n\r\n/**\r\n * @name sub\r\n * @category Common Helpers\r\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @description\r\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\r\n *\r\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\r\n *\r\n * @param date - The date to be changed\r\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\r\n *\r\n * | Key     | Description                        |\r\n * |---------|------------------------------------|\r\n * | years   | Amount of years to be subtracted   |\r\n * | months  | Amount of months to be subtracted  |\r\n * | weeks   | Amount of weeks to be subtracted   |\r\n * | days    | Amount of days to be subtracted    |\r\n * | hours   | Amount of hours to be subtracted   |\r\n * | minutes | Amount of minutes to be subtracted |\r\n * | seconds | Amount of seconds to be subtracted |\r\n *\r\n * All values default to 0\r\n *\r\n * @returns The new date with the seconds subtracted\r\n *\r\n * @example\r\n * // Subtract the following duration from 15 June 2017 15:29:20\r\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\r\n *   years: 2,\r\n *   months: 9,\r\n *   weeks: 1,\r\n *   days: 7,\r\n *   hours: 5,\r\n *   minutes: 9,\r\n *   seconds: 30\r\n * })\r\n * //=> Mon Sep 1 2014 10:19:50\r\n */\r\nexport function sub(date, duration) {\r\n  const {\r\n    years = 0,\r\n    months = 0,\r\n    weeks = 0,\r\n    days = 0,\r\n    hours = 0,\r\n    minutes = 0,\r\n    seconds = 0,\r\n  } = duration;\r\n\r\n  // Subtract years and months\r\n  const dateWithoutMonths = subMonths(date, months + years * 12);\r\n\r\n  // Subtract weeks and days\r\n  const dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\r\n\r\n  // Subtract hours, minutes and seconds\r\n  const minutestoSub = minutes + hours * 60;\r\n  const secondstoSub = seconds + minutestoSub * 60;\r\n  const mstoSub = secondstoSub * 1000;\r\n  const finalDate = constructFrom(date, dateWithoutDays.getTime() - mstoSub);\r\n\r\n  return finalDate;\r\n}\r\n\r\n// Fallback for modularized imports:\r\nexport default sub;\r\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,GAAT,CAAaC,IAAb,EAAmBC,QAAnB,EAA6B;EAClC,sBAQIA,QARJ,CACEC,KADF;EAAA,IACEA,KADF,gCACU,CADV;EAAA,uBAQID,QARJ,CAEEE,MAFF;EAAA,IAEEA,MAFF,iCAEW,CAFX;EAAA,sBAQIF,QARJ,CAGEG,KAHF;EAAA,IAGEA,KAHF,gCAGU,CAHV;EAAA,qBAQIH,QARJ,CAIEI,IAJF;EAAA,IAIEA,IAJF,+BAIS,CAJT;EAAA,sBAQIJ,QARJ,CAKEK,KALF;EAAA,IAKEA,KALF,gCAKU,CALV;EAAA,wBAQIL,QARJ,CAMEM,OANF;EAAA,IAMEA,OANF,kCAMY,CANZ;EAAA,wBAQIN,QARJ,CAOEO,OAPF;EAAA,IAOEA,OAPF,kCAOY,CAPZ,qBADkC,CAWlC;;EACA,IAAMC,iBAAiB,GAAGZ,SAAS,CAACG,IAAD,EAAOG,MAAM,GAAGD,KAAK,GAAG,EAAxB,CAAnC,CAZkC,CAclC;;EACA,IAAMQ,eAAe,GAAGd,OAAO,CAACa,iBAAD,EAAoBJ,IAAI,GAAGD,KAAK,GAAG,CAAnC,CAA/B,CAfkC,CAiBlC;;EACA,IAAMO,YAAY,GAAGJ,OAAO,GAAGD,KAAK,GAAG,EAAvC;EACA,IAAMM,YAAY,GAAGJ,OAAO,GAAGG,YAAY,GAAG,EAA9C;EACA,IAAME,OAAO,GAAGD,YAAY,GAAG,IAA/B;EACA,IAAME,SAAS,GAAGhB,aAAa,CAACE,IAAD,EAAOU,eAAe,CAACK,OAAhB,KAA4BF,OAAnC,CAA/B;EAEA,OAAOC,SAAP;AACD,C,CAED;;AACA,eAAef,GAAf"},"metadata":{},"sourceType":"module"}